#Homebrew github access token
if `which brew &>/dev/null`; then
export HOMEBREW_GITHUB_API_TOKEN="_COPY_YOUR_TOKEN_"
fi

#export PATH="/usr/local/sbin:$PATH"
if [ -d $HOME/.npm-packages/bin ]; then export PATH="$HOME/.npm-packages/bin:$PATH"; fi;
if [ -d $HOME/.npm-global/bin ]; then export PATH="$HOME/.npm-global/bin:$PATH"; fi;
if [ -d $HOME/local/bin ]; then export PATH="$HOME/local/bin:$PATH"; fi;


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"
alias mkdir="mkdir -p"
# Shortcuts
alias mtr="/usr/local/sbin/mtr"
alias d="cd ~/Dropbox"
alias p="cd ~/Projects"
alias g="git"
alias h="history"
alias j="jobs"
alias v="vim"
alias m="mate ."
#alias rm="trash"
alias subl="open -a Sublime\ Text"
alias oo="open ."
alias brackets='open -a Brackets'
alias o="open -a Sublime\ Text"
alias i='open -a Preview'
alias f='open -a Finder'
alias ff='open -a Firefox'
alias s='open -a Safari'
alias op='open -a Opera'
alias ch='open -a Google\ Chrome.app'
alias hex='open -a Hex\ Fiend'
alias art='php artisan'
alias wg="wget --cookies=on --load-cookies=cookies.txt --keep-session-cookies --save-cookies=cookies.txt"


alias hist='history | grep $1' #Requires one input

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Gzip-enabled `curl`
alias gurl="curl --compressed"

# Get OS X Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade; npm update npm -g; npm update -g; sudo gem update'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en1"
alias ips="ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'"

# Enhanced WHOIS lookups
#alias whois="whois -h whois-servers.net"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# ROT13-encode text. Works for decoding, too! ;)
alias rot13='tr a-zA-Z n-za-mN-ZA-M'

# Empty the Trash on all mounted volumes and the main HDD
# Also, clear Apple’s System Logs to improve shell startup speed
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.Finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.Finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Ring the terminal bell, and put a badge on Terminal.app’s Dock icon
# (useful when executing time-consuming commands)
alias badge="tput bel"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
    alias "$method"="lwp-request -m '$method'"
done

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 7'"
alias hax="growlnotify -a 'Activity Monitor' 'System error' -m 'WTF R U DOIN'"

# Open a manpage in Preview, which can be saved to PDF
function pman {
   man -t "${1}" | open -f -a /Applications/Preview.app
}
#if [[ "$OSTYPE" == "darwin"* ]]; then
#    alias man="pman"
#fi

alias kd="cd /opt/kDeploy/tools"
alias ks="cd /opt/kServer"

alias varnishon='iptables -t nat -A PREROUTING -i eth0 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 6081;iptables -t nat -A PREROUTING -i eth0 -p tcp -m tcp --dport 6081 -j REDIRECT --to-ports 80'
alias varnishoff='iptables -t nat -D PREROUTING -i eth0 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 6081;iptables -t nat -D PREROUTING -i eth0 -p tcp -m tcp --dport 6081 -j REDIRECT --to-ports 80'
alias varnishstatus='iptables -L -t nat |grep -q 6081; if [ "test$?" = "test0" ]; then echo "Varnish On"; else echo "Varnish Off"; fi'


alias objc='gcc -g -Wall -framework foundation -std=gnu99 -mmacosx-version-min=10.5 -arch x86_64 -o '

#Web Development
#Video conversion
alias ffmpeg="ffmpeg -strict -2"
alias minimize_videos='for i in `ls *.mp4`; do ffmpeg -i "${i}" "${i}.tmp.mp4" && trash "${i}" && mv "${i}.tmp.mp4" "${i}"; done'

if [ -x /usr/bin/hdiutil ]; then
    alias sparsecreate='function _sparsecreate(){ time hdiutil create -format UDSB -tgtimagekey sparse-band-size=100000 -o "$2" -srcfolder "$1"; };_sparsecreate'
    alias sparseconvert='function _sparseconvert(){ time hdiutil convert "$1" -format UDSB -tgtimagekey sparse-band-size=100000 -o "$2"; };_sparseconvert'
    alias dmgconvert='function _dmgconvert(){ time hdiutil convert "$1" -format UDRO -o "$2"; };_dmgconvert'
fi

function whoisip(){
 wget -q -O - "http://ipinfo.io/$1/json"|sed 's/[{}]*//'
}

function trash(){
 mv "${1}" ~/.Trash
}
function add_subs(){
 ffmpeg -i "${1}" -map 0 -c:s mov_text -metadata:s:s:0 language=eng "${2}"
}
function minify_aac(){
 ffmpeg -i "${1}" -ab 64k -ar 22050 -ac 1 "tmp.aac" && trash "${1}" && mv "tmp.aac" "${1}"
}
function minify_mp3(){
 ffmpeg -i "${1}" -ab 64k -ar 22050 -ac 1 "tmp.mp3" && trash "${1}" && mv "tmp.mp3" "${1}"
}
function minify_pdf(){
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4  -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile="tmp.pdf" "${1}" && trash "${1}" && mv "tmp.pdf" "${1}"
}

compresspdf() {
    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dPDFSETTINGS=/${3:-"screen"} -dCompatibilityLevel=1.4 -sOutputFile="$2" "$1"
}
